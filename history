;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(compile-history ivy-history goto-line-history swiper-history counsel-M-x-history buffer-name-history command-history read-char-history file-name-history search-ring extended-command-history))
(setq compile-history '("pdflatex ../mcmc.tex" "pdflatex mcmc" "gcc -o donat donat.c -lm && ./donat " "gcc -o donat donat.c -l && ./donat "))
(setq ivy-history '(#("*dashboard*" 0 11 (ivy-index 0)) #("enumerate" 0 9 (ivy-index 6)) #("main.c" 0 6 (ivy-index 1)) #("clangd" 0 6 (ivy-index 0)) #("init.el" 0 7 (ivy-index 1)) #("popup-kill-ring" 0 15 (ivy-index 0)) #("com" 0 3 (ivy-index 0)) "*Compile-Log*" "*compilation*" #("*Compile-Log*" 0 13 (ivy-index 12)) #("/mnt/docs/" 0 10 (ivy-index 0))))
(setq goto-line-history '("169" "-1" "+11"))
(setq swiper-history '(#("lsp ui" 0 6 (ivy-index 0)) #(" (use-package lsp-ui" 0 1 (swiper-line-number 299 display "299 ") 1 2 (fontified t face (rainbow-delimiters-depth-1-face)) 2 13 (fontified t face font-lock-keyword-face) 13 14 (fontified t) 14 20 (fontified t face font-lock-constant-face)) #("custom" 0 6 (ivy-index 4)) #("   :custom ((projectile-completion-system 'ivy))" 0 1 (swiper-line-number 271 display "271 ") 1 3 (fontified t) 3 10 (fontified t face font-lock-builtin-face) 10 11 (fontified t) 11 12 (fontified t face (rainbow-delimiters-depth-2-face)) 12 13 (fontified t face (rainbow-delimiters-depth-3-face)) 13 46 (fontified t) 46 47 (fontified t face (rainbow-delimiters-depth-3-face)) 47 48 (fontified t face (rainbow-delimiters-depth-2-face))) #("lsp" 0 3 (ivy-index 2)) #(" ;; LSP" 0 1 (swiper-line-number 284 display "284 ") 1 4 (fontified t face font-lock-comment-delimiter-face) 4 7 (fontified t face font-lock-comment-face)) #("map" 0 3 (ivy-index 1)) #(" 	 :map global-map" 0 1 (swiper-line-number 184 display "184 ") 1 3 (fontified t) 3 7 (fontified t face font-lock-builtin-face) 7 18 (fontified t)) "pro"))
(setq counsel-M-x-history '(#("delete" 0 6 (ivy-index 0)) "mouse-delete-window" #("compile" 0 7 (ivy-index 1)) #("latex" 0 5 (ivy-index 0)) "tex-latex-block" #("delete-wi" 0 9 (ivy-index 2)) "delete-window" "tex-latex-block" #("tex-mo" 0 6 (ivy-index 0)) "latex-mode" #("lsp find im" 0 11 (ivy-index 0)) "lsp-ui-peek-find-implementation" "lsp-ui-peek-find-implementation" "lsp-find-implementation" #("lsp find" 0 8 (ivy-index 3)) "lsp-find-implementation" #("lsp" 0 3 (ivy-index 198)) "lsp-ui-imenu--visit" #("lsp-ui" 0 6 (ivy-index 4)) "lsp-ui-flycheck-list" #("lsp-ui-p" 0 8 (ivy-index 0)) "lsp-ui-peek-find-definitions" "lsp-ui-mode" #("transpose-li" 0 12 (ivy-index 0)) "transpose-lines" #("kill-bu" 0 7 (ivy-index 0))))
(setq buffer-name-history '("*dashboard*" "*Completions*" "*Backtrace*" "*Compile-Log*" "*Messages*" "*scratch*" "init.el"))
(setq command-history '((kill-buffer "*dashboard*") (compile "pdflatex ../mcmc.tex" nil) (compile "pdflatex mcmc" nil) (tex-latex-block nil nil) (delete-window) (compile "pdflatex mcmc" nil) (tex-latex-block nil nil) (latex-mode) (lsp-ui-peek-find-implementation) (lsp-ui-peek-find-implementation) (lsp-find-implementation) (lsp-find-implementation) (lsp-ui-imenu--visit) (lsp-ui-flycheck-list) (lsp-ui-peek-find-definitions) (lsp-ui-mode 'toggle) (transpose-lines 1) (lsp nil) (zap-to-char 1 41 t) (kill-buffer-and-window) (compile "gcc -o donat donat.c -lm && ./donat " nil) (compile "gcc -o donat donat.c -l && ./donat " nil) (goto-line-relative 169 nil) (goto-line-relative -1 nil) (goto-line-relative 11 nil)))
(setq read-char-history '(")" ";" ")"))
(setq file-name-history '("~/.emacs.d/.gitignore" #("/mnt/docs/project/mcmc/final-silde/section/MH-algo.tex" 0 54 (ivy-index 3)) #("/mnt/docs/" 0 10 (ivy-index 2)) #("/mnt/docs/code/c/program/musicvi/" 0 33 (ivy-index 0)) #("/mnt/don" 0 8 (ivy-index 0)) "~/.emacs.d/init.el"))
(setq search-ring '(#("pro" 0 3 (isearch-case-fold-search t isearch-regexp-function nil)) #("doom" 0 4 (isearch-case-fold-search t isearch-regexp-function nil)) #("my" 0 2 (isearch-case-fold-search t isearch-regexp-function nil)) #("zoom" 0 4 (isearch-case-fold-search t isearch-regexp-function nil)) #("Zoom" 0 4 (isearch-case-fold-search nil isearch-regexp-function nil))))
(setq extended-command-history '("delete-window" "dashboard-open" "quit-window" "load-file" "kill-buffer-and-window" "load-file" "all-the-icons-install-fonts"))
