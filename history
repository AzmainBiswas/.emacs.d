;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(counsel-grep-history grep-find-history c-set-style-history read-expression-history input-method-history counsel-describe-symbol-history shell-command-history counsel-imenu-history counsel-locate-history counsel-git-history counsel-git-grep-history minibuffer-history TeX-command-history read-number-history query-replace-history xref--read-identifier-history compile-history ivy-history goto-line-history swiper-history counsel-M-x-history buffer-name-history command-history read-char-history file-name-history search-ring extended-command-history))
(setq grep-find-history '("find . -type f -exec grep --color=auto -nH --null -e hello \\{\\} +"))
(setq counsel-describe-symbol-history '(#("display-line number type" 0 24 (ivy-index 0)) "display-line-numbers-type"))
(setq shell-command-history '("sudo make clean install" "ls"))
(setq counsel-imenu-history '(#("main int ()" 0 4 (ivy-index 4 idx 4) 4 11 (ivy-index 4 idx 4 face lsp-signature-face))))
(setq counsel-git-history '(#("init.el" 0 7 (ivy-index 4))))
(setq minibuffer-history '("slide" "Notes" "helo" "zathura macro.pdf --synctex-forward 82:0:\"mcmc.tex\" -x \"emacsclient --socket-name=server +%{line} %{input}\"qq"))
(setq TeX-command-history '(#("View" 0 4 (ivy-index 3 idx 3)) #("LaTeX" 0 5 (ivy-index 0 idx 0)) #("TeX" 0 3 (ivy-index 0 idx 0)) #("Clean All" 0 9 (ivy-index 16 idx 16))))
(setq read-number-history '("16" "4" "0"))
(setq query-replace-history '("p" ""))
(setq xref--read-identifier-history '(#("section/intro-mcmc" 0 18 (ivy-index 0 identifier-at-point t face (font-lock-constant-face) fontified t))))
(setq compile-history '("./build.sh && ./single_neuron " "make && ./musicvi " "pdflatex ../mcmc.tex" "pdflatex mcmc" "gcc -o donat donat.c -lm && ./donat " "gcc -o donat donat.c -l && ./donat "))
(setq ivy-history '(#("general-20240410.1650" 0 21 (ivy-index 0)) #("package-delete" 0 14 (idx 0 ivy-index 0)) #("evil-20240603.1454" 0 18 (ivy-index 0)) #("yasnippet-snippets-20240603.757" 0 31 (ivy-index 0)) #("evil-collection-20240605.1443" 0 29 (ivy-index 0)) #("init.el" 0 7 (ivy-index 1)) #("doom one" 0 8 (ivy-index 1)) "doom-one" #("doom-Iosvkem" 0 12 (ivy-index 1)) #("*Edit Macro*" 0 12 (ivy-index 0)) #("yes" 0 3 (ivy-index 0)) #("no" 0 2 (ivy-index 1)) #("i3" 0 2 (ivy-index 2)) "~/.dotfiles/.config/i3/config" #("~/.dotfiles/.bashrc" 0 19 (ivy-index 0)) #("~/.dotfiles/.config/i3/config" 0 29 (ivy-index 1)) #("recentf-" 0 8 (idx 0 ivy-index 0)) #("vterm-20240520.231" 0 18 (ivy-index 0)) #("vterm-toggle-20230912.246" 0 25 (ivy-index 0)) #("~/.dotfiles/bin/bookmark.sh" 0 27 (ivy-index 0)) #("bash-ls" 0 7 (ivy-index 0)) #("Conclusion.md" 0 13 (ivy-index 1)) #("/mnt/docs/sync2/Note/M.Sc Thesis/Conclusion.md" 0 46 (ivy-index 1)) #("*dashboard*" 0 11 (ivy-index 1)) #("*edit-indirect Conclusion.md*" 0 29 (ivy-index 1))))
(setq goto-line-history '("+ 4" "48+2" "2+" "2-" "-2" "60" "169" "-1" "+11"))
(setq swiper-history '(#(" - we are partitioning [0,1] in to several intervals." 0 1 (ivy-index 13 swiper-line-number 14 display "14 ") 1 2 (ivy-index 13 fontified t markdown-list-item #1=((261 313 0 2 "- " nil (261 263 261 261 261 262 262 263))) face markdown-list-face) 2 23 (ivy-index 13 fontified t markdown-list-item #1#) 23 27 (ivy-index 13 fontified t markdown-list-item #1#) 27 28 (ivy-index 13 fontified t markdown-list-item #1#) 28 31 (ivy-index 13 fontified t markdown-list-item #1#) 31 34 (ivy-index 13 fontified t markdown-list-item #1#) 34 42 (ivy-index 13 fontified t markdown-list-item #1#) 42 53 (ivy-index 13 fontified t markdown-list-item #1#)) "`" #("color" 0 5 (ivy-index 1)) #(" 	# Window color settings" 0 1 (swiper-line-number 411 display "411 ") 1 2 (fontified t) 2 4 (fontified t face font-lock-comment-delimiter-face) 4 25 (fontified t face font-lock-comment-face)) #("evil" 0 4 (ivy-index 0)) #(" ;; Evil mode" 0 1 (swiper-line-number 94 display "94  ") 1 4 (fontified t face font-lock-comment-delimiter-face) 4 13 (fontified t face font-lock-comment-face)) "C-" "PCWRETe])" "PCWRETe])" "PCWRETe])" "PCWRETe])" "PCWRETe])" "PCWRETe])" "PCWRETe])" "PCWRETe])" #("PCWRETe])" 7 8 (face (rainbow-delimiters-depth-2-face)) 8 9 (face (rainbow-delimiters-depth-1-face))) "PCW(global-set-key (kbd \"C-,\") \"\\C-a\\C-SPC\\C-e\\S-w\\C-n\\C-y\\C-e\")" "PCW(global-set-key (kbd \"C-,\") \"\\C-a\\C-SPC\\C-e\\S-w\\C-n\\C-y\\C-e\")" "PCW(global-set-key (kbd \"C-,\") \"\\C-a\\C-SPC\\C-e\\S-w\\C-n\\C-y\\C-e\")" "PCW(global-set-key (kbd \"C-,\") \"\\C-a\\C-SPC\\C-e\\S-w\\C-n\\C-y\\C-e\")" "PCW(global-set-key (kbd \"C-,\") \"\\C-a\\C-SPC\\C-e\\S-w\\C-n\\C-y\\C-e\")" "PCW(global-set-key (kbd \"C-,\") \"\\C-a\\C-SPC\\C-e\\S-w\\C-n\\C-y\\C-e\")" "PCW(global-set-key (kbd \"C-,\") \"\\C-a\\C-SPC\\C-e\\S-w\\C-n\\C-y\\C-e\")" "PCW(global-set-key (kbd \"C-,\") \"\\C-a\\C-SPC\\C-e\\S-w\\C-n\\C-y\\C-e\")" "PCW(global-set-key (kbd \"C-,\") \"\\C-a\\C-SPC\\C-e\\S-w\\C-n\\C-y\\C-e\")"))
(setq counsel-M-x-history '(#("markdown-mode" 0 13 (ivy-index 2)) #("markdown-mo" 0 11 (ivy-index 0)) "markdown-mode-menu" #("markdown view" 0 13 (ivy-index 1)) "markdown-view-mode" #("markdown" 0 8 (ivy-index 144)) #("gf" 0 2 (ivy-index 2)) "gfm-view-mode" #("gfm" 0 3 (ivy-index 3)) "gfm-mode" "gfm-view-mode" #("flyspell" 0 8 (ivy-index 1)) "flyspell-check-previous-highlighted-word" "flyspell-correct-word-before-point" #("line number" 0 11 (ivy-index 2)) "line-number-mode" #("markdown preview" 0 16 (ivy-index 4)) "markdown-live-preview-mode" #("ispell com" 0 10 (ivy-index 4)) "ispell-complete-word" "flyspell-correct-word" #("ispell " 0 7 (ivy-index 6)) "ispell-hunspell-add-multi-dic" #("ispell" 0 6 (ivy-index 6))))
(setq buffer-name-history '(#("config" 0 6 (ivy-index 0)) "*dashboard*" "*Completions*" "*Backtrace*" "*Compile-Log*" "*Messages*" "*scratch*" "init.el"))
(setq command-history '((markdown-mode) (markdown-view-mode) (markdown-mode) (markdown) (gfm-view-mode) (gfm-mode) (gfm-view-mode) (flyspell-check-previous-highlighted-word nil) (flyspell-correct-word-before-point) (line-number-mode 'toggle) (markdown-live-preview-mode 'toggle) (ispell-complete-word nil) (ispell-hunspell-add-multi-dic "") (ispell-hunspell-add-multi-dic "") (markdown-preview) (checkdoc-ispell) (company-ispell 'interactive) (ispell-complete-word-interior-frag) (bookmark-set-no-overwrite nil nil) (rainbow-mode 'toggle) (display-buffer "config" nil) (rainbow-mode 'toggle) (package-delete #s(package-desc general (20240410 1650) "Convenience wrappers for keybindings." ((emacs (24 4)) (cl-lib (0 5))) nil nil "/home/azmain/.emacs.d/elpa/general-20240410.1650" ((:url . "https://github.com/noctuid/general.el") (:keywords "vim" "evil" "leader" "keybindings" "keys") (:maintainer "Fox Kiester" . "noct@posteo.net") (:maintainers ("Fox Kiester" . "noct@posteo.net")) (:authors ("Fox Kiester" . "noct@posteo.net")) (:commit . "826bf2b97a0fb4a34c5eb96ec2b172d682fd548f")) nil) nil nil) (package-delete #s(package-desc evil (20240603 1454) "Extensible vi layer" ((emacs (24 1)) (goto-chg (1 6)) (cl-lib (0 5))) nil nil "/home/azmain/.emacs.d/elpa/evil-20240603.1454" ((:url . "https://github.com/emacs-evil/evil") (:keywords "emulations") (:maintainer "Tom Dalziel" . "tom.dalziel@gmail.com") (:commit . "3ba76c1c1f6e8f0389d7bebbd220eefaca796da4")) nil) nil nil) (package-delete #s(package-desc yasnippet-snippets (20240603 757) "Collection of yasnippet snippets" ((yasnippet (0 8 0))) nil nil "/home/azmain/.emacs.d/elpa/yasnippet-snippets-20240603.757" ((:url . "https://github.com/AndreaCrotti/yasnippet-snippets") (:keywords "snippets") (:maintainer "Andrea Crotti" . "andrea.crotti.0@gmail.com") (:maintainers ("Andrea Crotti" . "andrea.crotti.0@gmail.com")) (:authors ("Andrea Crotti" . "andrea.crotti.0@gmail.com")) (:commit . "1bf034887c4048c38266842686b7f9c8384f72e7")) nil) nil nil)))
(setq read-char-history '("\"" "e" ")" ";" ")"))
(setq file-name-history '(#("/mnt/docs/sync2/Note/M.Sc Thesis/slide.md" 0 41 (ivy-index 0)) #("/mnt/docs/sync2/Note/" 0 21 (ivy-index 0)) #("/home/azmain/.dotfiles/.config/polybar/config" 0 45 (ivy-index 3)) #("/home/azmain/.dotfiles/.config/alacritty/themes/DoomOne.toml" 0 60 (ivy-index 2)) #("/home/azmain/.dotfiles/.config/alacritty/alacritty.toml" 0 55 (ivy-index 3)) #("/home/azmain/.dotfiles/.config/i3/config" 0 40 (ivy-index 3)) #("/home/azmain/.dotfiles/.config/starship/" 0 40 (ivy-index 0)) #("/home/azmain/.bashrc" 0 20 (ivy-index 3)) #("/home/azmain/.dotfiles/" 0 23 (ivy-index 0)) #("/home/azmain/.dotfiles/.zshrc" 0 29 (ivy-index 17)) #("/home/azmain/.dotfiles/bin/bookmark.sh" 0 38 (ivy-index 6)) #("/home/azmain/.dotfiles/bin/batterynotify" 0 40 (ivy-index 5)) #("/home/azmain/.dotfiles/bin/audio-song" 0 37 (ivy-index 4)) #("/home/azmain/bin/i3-power-menu" 0 30 (ivy-index 0)) #("/home/azmain/.dotfiles/.config/i3/" 0 34 (ivy-index 0)) #("/home/azmain/.emacs.d/" 0 22 (ivy-index 0)) #("/home/azmain/.dotfiles/.bash_profile" 0 36 (ivy-index 0)) #("/home/azmain/.Xresources" 0 24 (ivy-index 0)) #("/home/azmain/.dotfiles/bin/dmenu_google.sh" 0 42 (ivy-index 0)) #("/home/azmain/bin/dmenu_google.sh" 0 32 (ivy-index 0)) #("/home/azmain/Documents/main.md" 0 30 (ivy-index 4)) #("/mnt/docs/code/c/learning/ml/single_neuron.c" 0 44 (ivy-index 1)) #("/mnt/docs/code/c/learning/ml/" 0 29 (ivy-index 0)) #("/mnt/docs/code/c/learning/ml" 0 28 (ivy-index 0)) #("/mnt/docs/code/c/learning/" 0 26 (ivy-index 0))))
(setq search-ring '(#("pro" 0 3 (isearch-case-fold-search t isearch-regexp-function nil)) #("doom" 0 4 (isearch-case-fold-search t isearch-regexp-function nil)) #("my" 0 2 (isearch-case-fold-search t isearch-regexp-function nil)) #("zoom" 0 4 (isearch-case-fold-search t isearch-regexp-function nil)) #("Zoom" 0 4 (isearch-case-fold-search nil isearch-regexp-function nil))))
(setq extended-command-history '("delete-window" "dashboard-open" "quit-window" "load-file" "kill-buffer-and-window" "load-file" "all-the-icons-install-fonts"))
